-- MySQL Script generated by MySQL Workbench
-- Wed Jun 17 20:43:25 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema course_choose_system
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema course_choose_system
-- -----------------------------------------------------
CREATE DATABASE IF NOT EXISTS `course_choose_system` DEFAULT CHARACTER SET utf8 ;
USE `course_choose_system` ;

-- -----------------------------------------------------
-- Table `course_choose_system`.`major`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`major` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `major` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `major_UNIQUE` (`major` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`grade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`grade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grade` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `grade_UNIQUE` (`grade` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`student` (
  `uid` VARCHAR(45) NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `grade` INT NOT NULL,
  `institute` VARCHAR(45) NOT NULL,
  `major` INT NOT NULL,
  PRIMARY KEY (`uid`),
  INDEX `student_major_index` (`major` ASC),
  INDEX `student_grade_index` (`grade` ASC),
  CONSTRAINT `fk_student_major`
    FOREIGN KEY (`major`)
    REFERENCES `course_choose_system`.`major` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_grade`
    FOREIGN KEY (`grade`)
    REFERENCES `course_choose_system`.`grade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`admin` (
  `uid` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `user_group` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`uid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`teacher` (
  `uid` VARCHAR(45) NOT NULL,
  `name` VARCHAR(10) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `institute` VARCHAR(45) NOT NULL,
  `user_group` VARCHAR(45) NULL,
  PRIMARY KEY (`uid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`course` (
  `course_id` VARCHAR(45) NOT NULL,
  `course_name` VARCHAR(45) NOT NULL,
  `time` VARCHAR(45) NOT NULL,
  `required` TINYINT NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `owner_institute` VARCHAR(45) NOT NULL,
  `max_students` INT NULL,
  PRIMARY KEY (`course_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`teacher_teach_course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`teacher_teach_course` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `course_course_id` VARCHAR(45) NOT NULL,
  `teacher_uid` VARCHAR(45) NOT NULL,
  INDEX `teacher_teach_course_teacher_index` (`teacher_uid` ASC),
  INDEX `teacher_teach_course_course_index` (`course_course_id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE KEY (`course_course_id`, `teacher_uid`),
  CONSTRAINT `fk_teacher_teach_course_course`
    FOREIGN KEY (`course_course_id`)
    REFERENCES `course_choose_system`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_teacher_teach_course_teacher`
    FOREIGN KEY (`teacher_uid`)
    REFERENCES `course_choose_system`.`teacher` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`student_choose_course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`student_choose_course` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `course_course_id` VARCHAR(45) NOT NULL,
  `student_uid` VARCHAR(45) NOT NULL,
  `normal_grades` INT NULL,
  `final_grades` INT NULL,
  INDEX `student_choose_course_student_id_index` (`student_uid` ASC),
  INDEX `student_choose_course_course_id_index` (`course_course_id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE KEY (`course_course_id`, `student_uid`),
  CONSTRAINT `fk_student_choose_course_course`
    FOREIGN KEY (`course_course_id`)
    REFERENCES `course_choose_system`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_choose_course_student`
    FOREIGN KEY (`student_uid`)
    REFERENCES `course_choose_system`.`student` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`major_can_course_choose`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`major_can_course_choose` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `major` INT NOT NULL,
  `course` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `major_course_index` (`course` ASC),
  INDEX `major_major_index` (`major` ASC),
  UNIQUE KEY (`major`, `course`),
  CONSTRAINT `fk_major_major`
    FOREIGN KEY (`major`)
    REFERENCES `course_choose_system`.`major` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_major_course`
    FOREIGN KEY (`course`)
    REFERENCES `course_choose_system`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_choose_system`.`grade_can_course_choose`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_choose_system`.`grade_can_course_choose` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grade` INT NOT NULL,
  `course` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `course_grade_index` (`grade` ASC),
  INDEX `couse_course_index` (`course` ASC),
  UNIQUE KEY (`grade`, `course`),
  CONSTRAINT `fk_course_grade`
    FOREIGN KEY (`grade`)
    REFERENCES `course_choose_system`.`grade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_couse_course`
    FOREIGN KEY (`course`)
    REFERENCES `course_choose_system`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

create view `courseid_teacher_name` as
select `teacher_teach_course`.`course_course_id`, `teacher`.`name`
from teacher_teach_course
        inner join teacher
                on teacher_teach_course.teacher_uid = teacher.uid;

create view `courseid_major_name` as
select `major`.`major`, `major`.`id`, `major_can_course_choose`.`course`
from `major_can_course_choose`
        inner join `major`
                on major.id = major_can_course_choose.major

create view courseid_student_info
as
select `student`.`uid`,
       `student`.`name`,
       `student`.`institute`,
       `major`.`major`,
       `student_choose_course`.`course_course_id`,
       `student_choose_course`.`normal_grades`,
       `student_choose_course`.`final_grades`
from `student`
         inner join `major`
                    on `student`.`major` = `major`.`id`
         inner join `student_choose_course`
                    on `student`.`uid` = `student_choose_course`.`student_uid`

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
